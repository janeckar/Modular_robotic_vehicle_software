#!/bin/bash

# help messages
USAGE_MSG="Usage: $0 <service_name> [--ros-distro|-d <distro>] [--workspace_setup|-w <path>] [--launch|-l <pkg> <file>] [--groups|-g \"group1 group2 ...\"] [--enable-rt|-r] [--uninstall] [--env|-e VAR1=VAL1:VAR2=VAL2] [--description|-s <description>] [--user|-u <user>] [--help|-h]"
GENERATED_MSG="# Generated by manage_service.sh"

# === Default values ===
SERVICE_NAME=""
ROS_DISTRO="jazzy"
WORKSPACE_INSTALL=""
LAUNCH_PKG=""
LAUNCH_FILE=""
SUPPLEMENTARY_GROUPS=""
ENABLE_RT=false
UNINSTALL=false
USER_NAME=$(whoami)
SYSTEMD_DIR="/etc/systemd/system"
ROS_ENV_VARS=""
REALTIME_SCHED_FIFO=""

# === Argument parser ===
if [[ $# -lt 1 ]]; then
    echo "$USAGE_MSG"
    exit 1
fi

SERVICE_NAME="$1"
shift

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        --ros-distro|-d) ROS_DISTRO="$2"; shift ;;
        --workspace|-w) WORKSPACE_INSTALL="$2"; shift ;;
        --launch|-l) LAUNCH_PKG="$2"; LAUNCH_FILE="$3"; shift 2 ;;
        --groups|-g) SUPPLEMENTARY_GROUPS="$2"; shift ;;
        --enable-rt|-r) ENABLE_RT=true ;;
        --uninstall) UNINSTALL=true ;;
        --env|-e) ROS_ENV_VARS="$2"; shift ;;
        --description|-s) DESCRIPTION="$2"; shift ;;
        --user|-u) USER_NAME="$2"; shift ;;
        --help|-h) echo "$USAGE_MSG"; exit 0 ;;
        -* | --*) echo "Unknown option: $1"; echo "$USAGE_MSG"; exit 1 ;;
        *) echo "Unknown argument: $1"; echo "$USAGE_MSG"; exit 1 ;;
    esac
    shift
done

# === Validate required arguments ===
if [[ "$UNINSTALL" != true && (-z "$LAUNCH_PKG" || -z "$LAUNCH_FILE" ) ]]; then
    echo "$USAGE_MSG"
    echo "Error: --launch <pkg> <file> is required unless uninstalling." 
    exit 1
fi

# === Parse environment variables ===
ENV_LINES=""
if [[ -n "$ROS_ENV_VARS" ]]; then
    OLD_IFS="$IFS"
    IFS=":"
    for env in $ROS_ENV_VARS; do
        ENV_LINES+="Environment=${env}\\n"
    done
    IFS="$OLD_IFS"
    # process newlines
    ENV_LINES=$(echo -e "$ENV_LINES")
fi

SERVICE_FILE="${SYSTEMD_DIR}/${SERVICE_NAME}.service"

# === Uninstall mode ===
if [[ "$UNINSTALL" == true ]]; then
    if [[ ! -f "$SERVICE_FILE" ]]; then
        echo "Service $SERVICE_NAME is not installed."
        exit 0
    fi
    FIRST_LINE=$(head -n 1 "$SERVICE_FILE")
    if [[ "$FIRST_LINE" != "$GENERATED_MSG" ]]; then
        echo "Error: $SERVICE_FILE was not generated by this script."
        exit 0
    fi

    echo "Service $SERVICE_NAME exists."
    read -p "Do you want to uninstall it? [y/N]: " confirm
    if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
        echo "Aborting uninstallation."
        exit 0
    fi

    echo "Uninstalling $SERVICE_NAME..."
    sudo systemctl stop "$SERVICE_NAME.service" || true
    sudo systemctl disable "$SERVICE_NAME.service" || true
    sudo rm -f "$SERVICE_FILE"
    sudo systemctl daemon-reload
    echo "Uninstalled $SERVICE_NAME"
    exit 0
fi

# === Check if service already exists ===
if [[ -f "$SERVICE_FILE" ]]; then
    FIRST_LINE=$(head -n 1 "$SERVICE_FILE")
    if [[ "$FIRST_LINE" != "$GENERATED_MSG" ]]; then
        echo "Error: $SERVICE_FILE already exists and was not generated by this script."
        exit 1
    fi

    echo "Service $SERVICE_NAME already exists."
    read -p "Do you want to replace it? [y/N]: " confirm
    if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
        echo "Aborting installation."
        exit 0
    fi
    echo "Replacing service: $SERVICE_NAME"
fi

# === Prepare ExecStart ===
EXEC_CMD="source /opt/ros/${ROS_DISTRO}/setup.bash && "
if [ -n "${WORKSPACE_INSTALL}" ]; then
    EXEC_CMD+="source ${WORKSPACE_INSTALL} && "
fi
EXEC_CMD+="ros2 launch ${LAUNCH_PKG} ${LAUNCH_FILE}"

# === Prepare realtime scheduling settings ===
if [ "$ENABLE_RT" = true ]; then
    REALTIME_SCHED_FIFO="LimitRTPRIO=99
LimitMEMLOCK=infinity"
fi

# === Prepare SupplementaryGroups ===
GROUPS_LINE=""
echo "$SUPPLEMENTARY_GROUPS"
if [[ -n "$SUPPLEMENTARY_GROUPS" ]]; then
    GROUPS_LINE="SupplementaryGroups=${SUPPLEMENTARY_GROUPS}"
fi

# === Generate systemd unit ===
echo "Generating service file at $SERVICE_FILE..."

sudo bash -c "cat > ${SERVICE_FILE}" <<EOF
${GENERATED_MSG}

[Unit]
Description=ROS 2 Launch: ${SERVICE_NAME}, ${DESCRIPTION:-"No additional description provided"}
After=network.target

[Service]
Type=simple
User=${USER_NAME}
ExecStart=/bin/bash -c '${EXEC_CMD}'
${GROUPS_LINE}
${REALTIME_SCHED_FIFO}
${ENV_LINES}

[Install]
WantedBy=multi-user.target
EOF

# === Enable + start service ===
echo "Reloading systemd and enabling service..."
sudo systemctl daemon-reload
sudo systemctl enable "${SERVICE_NAME}.service"

echo "Service '${SERVICE_NAME}' installed."
echo "Start it with: sudo systemctl start ${SERVICE_NAME}"